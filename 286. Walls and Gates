
```python
class Solution():
    directions = [(1,0), (-1,0), (0,1), (0,-1)]

    def wallAndGates(self, rooms):
        if len(rooms) == 0:
            return 
        m = len(rooms) 
        n = len(rooms)
        
        queue = []
        # scan rooms to see if there are gates(0s)
        for i in range(m):
            for j in range(n):
                if rooms[i][j] == 0:
                    queue.append((i,j))
                    
        while queue:
            cur = queue.pop(0)
            row, col = cur[0], cur[1]
            for direct in directions:
                r = row + direct[0]
                c = col + direct[1]
                if r < 0 or c < 0 or r >= m or c >= n or rooms[r][c] != 2147483647:
                    continue
                rooms[r][c] = rooms[row][col] + 1
                queue.append((r,c))         
```
